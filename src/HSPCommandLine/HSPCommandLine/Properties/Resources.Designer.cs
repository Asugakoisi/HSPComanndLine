//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HSPCommandLine.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HSPCommandLine.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   カレントディレクトリに既に {0} ディレクトリが存在します。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string AlreadyExistsInCurrentDirectory {
            get {
                return ResourceManager.GetString("AlreadyExistsInCurrentDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用法: hspcui build &lt;SOURCE_FILE&gt; [options]
        ///
        ///引数:
        ///&lt;SOURCE_FILE&gt;                  コンパイルするファイルのパス。
        ///
        ///オプション:
        ///-a                             ソースコードの文字コードを自動判別します。
        ///-c                             HSP var2.6 としてコンパイルします。
        ///-C                             カレントディレクトリをソースファイルが存在するディレクトリに変更します。
        ///-d                             デバッグ情報を付与してコンパイルします。
        ///-D                             コンパイルの成果物のうち、AssemblyInfo.hsp と自動実行ファイル以外を削除します。
        ///-E                             hspcui 内で発生したエラーを無視して実行を続けます。
        ///-i                            [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string build_desctription {
            get {
                return ResourceManager.GetString("build_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   - 普通にコンパイルする。
        ///    hspcui build source.hsp -j
        ///- ソースコードの文字コードを自動判別してコンパイルする。
        ///    hspcui build source.hsp -a
        ///- 自動実行ファイルを生成する。
        ///    hspcui build source.hsp -a -t exe
        ///- strmap を生成する。
        ///    hspcui build source.hsp -a -t strmap
        ///- 文字列データ（AssemblyInfo.hsp, strmapなど）をUTF-8形式で出力したいとき
        ///    hspcui build source.hsp -u
        ///- 出力ファイル名を変更する。
        ///    hspcui build source.hsp -o test.hsp に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string build_example {
            get {
                return ResourceManager.GetString("build_example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   - Linux版では指定できないオプション
        ///    -t|--type exe, -a, -j, -n|--notasminfo, --platform, --refname
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string build_note {
            get {
                return ResourceManager.GetString("build_note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   common フォルダは {0} に設定されました。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ComDirectorySetTo {
            get {
                return ResourceManager.GetString("ComDirectorySetTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ソースコードは {0} です。 {0} としてコンパイルします。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CompileCharset {
            get {
                return ResourceManager.GetString("CompileCharset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用法: hspcui config &lt;system|common|runtime|templates&gt; &lt;SET_DIR&gt; [options]
        ///
        ///引数:
        ///&lt;system|common|runtime|templates&gt; 登録する対象ディレクトリ
        ///&lt;SET_DIR&gt;                         登録するディレクトリの絶対パス
        ///
        ///オプション:
        ///-E                             hspcui 内で発生したエラーを無視して実行を続けます。
        ///-h, --help                     コマンド ラインのヘルプを表示します。
        ///--view                         登録されているディレクトリパスを表示します。
        ///--lang=&lt;LANGAGE&gt;               実行時の言語を指定します。使用可能な値 ja、en。
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string config_desctription {
            get {
                return ResourceManager.GetString("config_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   - HSP システムフォルダを登録します。
        ///    hspcui config system C:\hsp36
        ///- HSP システムフォルダの登録を解除します。
        ///    hspcui config system &quot;&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string config_example {
            get {
                return ResourceManager.GetString("config_example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} の中を {1} にコピーしました。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CopyAtoB {
            get {
                return ResourceManager.GetString("CopyAtoB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ドキュメントを開くことができませんでした。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CouldNotOpenDoc {
            get {
                return ResourceManager.GetString("CouldNotOpenDoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   AssemblyInfo.hsp を作成しました。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CreateAssemblyInfo {
            get {
                return ResourceManager.GetString("CreateAssemblyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カレントディレクトリは {0} に設定されました。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CurrentDirectorySetTo {
            get {
                return ResourceManager.GetString("CurrentDirectorySetTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} を削除しました。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DeleteA {
            get {
                return ResourceManager.GetString("DeleteA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} テンプレートを削除しました。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DeleteATemplate {
            get {
                return ResourceManager.GetString("DeleteATemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} テンプレートを削除しますか? (Y/N) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DeleteTemplateCaution {
            get {
                return ResourceManager.GetString("DeleteTemplateCaution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   説明 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Desctription {
            get {
                return ResourceManager.GetString("Desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   commonフォルダが指定されていません。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DidNotSpecifyComDirectory {
            get {
                return ResourceManager.GetString("DidNotSpecifyComDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   実行時のオプションが指定されていません。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DidNotSpecifyExecOption {
            get {
                return ResourceManager.GetString("DidNotSpecifyExecOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   アウトプットファイル名が指定されていません。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DidNotSpecifyOutputFile {
            get {
                return ResourceManager.GetString("DidNotSpecifyOutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   runtimeフォルダが指定されていません。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DidNotSpecifyRtmDirectory {
            get {
                return ResourceManager.GetString("DidNotSpecifyRtmDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   検索するワードが指定されていません。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DidNotSpecifySearchWord {
            get {
                return ResourceManager.GetString("DidNotSpecifySearchWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   コピー元フォルダが指定されていません。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DidNotSpecifySrcDirectory {
            get {
                return ResourceManager.GetString("DidNotSpecifySrcDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ソースファイルが指定されていません に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DidNotSpecifySrcFile {
            get {
                return ResourceManager.GetString("DidNotSpecifySrcFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   システムフォルダが指定されていません。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DidNotSpecifySysDirectory {
            get {
                return ResourceManager.GetString("DidNotSpecifySysDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   templatesフォルダが指定されていません。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DidNotSpecifyTmpDirectory {
            get {
                return ResourceManager.GetString("DidNotSpecifyTmpDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ソースファイルを shift_jis から utf-8 へエンコードしました。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EncodeShitjisToUtf8 {
            get {
                return ResourceManager.GetString("EncodeShitjisToUtf8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   エラーを無視しますが、とても危険です。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorIgnore {
            get {
                return ResourceManager.GetString("ErrorIgnore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   OS が Windows でないため {0} オプションは無効化されます。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorOS {
            get {
                return ResourceManager.GetString("ErrorOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   例 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Example {
            get {
                return ResourceManager.GetString("Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ソースファイルを shift_jis から utf-8 へエンコードできませんでした。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FailedEncodeShitjisToUtf8 {
            get {
                return ResourceManager.GetString("FailedEncodeShitjisToUtf8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {
        ///  &quot;$schema&quot;: &quot;https://raw.githubusercontent.com/Asugakoisi/HSPComanndLine/main/src/json/hspcui-schema.json&quot;,
        ///  &quot;ver&quot;: &quot;0.6.0.0-1.0.0.0&quot;,
        ///  &quot;lang&quot;: &quot;ja&quot;,
        ///  &quot;options&quot;: [
        ///    {
        ///      &quot;id&quot;: 0,
        ///      &quot;name&quot;: &quot;help&quot;,
        ///      &quot;desctription&quot;: &quot;指定したオプションの詳細を表示します。&quot;,
        ///      &quot;example&quot;: &quot;hspcui --help a\nhspcui --help syspath=\n--syspath=\&quot;C:\\hsp351\&quot; hspcui --help a&quot;,
        ///      &quot;note&quot;: &quot;--syspath=, -E, --lang= オプションを利用したい場合は、このオプションの前に指定します。\n調べたいオプションに - をつけてはいけません。実行される恐れがあります。&quot;,
        ///      &quot;linux&quot;: true,
        ///      &quot; [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string hspcui {
            get {
                return ResourceManager.GetString("hspcui", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ソースコードの文字コードが不正です。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InvalidCharset {
            get {
                return ResourceManager.GetString("InvalidCharset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} は無効なオプションです。無視します。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InvalidOption {
            get {
                return ResourceManager.GetString("InvalidOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   BSD 2-Clause License
        ///
        ///Copyright (c) 2021, Asugakoisi
        ///All rights reserved.
        ///
        ///Redistribution and use in source and binary forms, with or without
        ///modification, are permitted provided that the following conditions are met:
        ///
        ///1. Redistributions of source code must retain the above copyright notice, this
        ///   list of conditions and the following disclaimer.
        ///
        ///2. Redistributions in binary form must reproduce the above copyright notice,
        ///   this list of conditions and the following disclaimer in the documenta [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LICENSE {
            get {
                return ResourceManager.GetString("LICENSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   存在する {0} は現在のバージョン（{1}）に対応していません。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotCompatibleWithCurrentVersion {
            get {
                return ResourceManager.GetString("NotCompatibleWithCurrentVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   注意 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Note {
            get {
                return ResourceManager.GetString("Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} が見つかりませんでした。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotFoundA {
            get {
                return ResourceManager.GetString("NotFoundA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   HSP Docs Library が見つかりません。 (hdl.exe) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotFoundHDL {
            get {
                return ResourceManager.GetString("NotFoundHDL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   指定された {0} オプションのヘルプが見つかりませんでした。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotFoundSpecifyOptionHelp {
            get {
                return ResourceManager.GetString("NotFoundSpecifyOptionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   指定されたプロファイルが見つかりませんでした。({0}) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotFoundSpecifyProfile {
            get {
                return ResourceManager.GetString("NotFoundSpecifyProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   指定されたコピー元フォルダが見つかりませんでした。({0}) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotFoundSpecifySrcDirectory {
            get {
                return ResourceManager.GetString("NotFoundSpecifySrcDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   指定されたソースファイルが見つかりませんでした。({0}) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotFoundSpecifySrcFile {
            get {
                return ResourceManager.GetString("NotFoundSpecifySrcFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   指定されたシステムフォルダが見つかりませんでした。({0}) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotFoundSpecifySysDirectory {
            get {
                return ResourceManager.GetString("NotFoundSpecifySysDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   指定されたテンプレートフォルダが見つかりませんでした。({0}) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotFoundSpecifyTmpDirectory {
            get {
                return ResourceManager.GetString("NotFoundSpecifyTmpDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   オプションの詳細 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Optiondetails {
            get {
                return ResourceManager.GetString("Optiondetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用法: hspcui profile add &lt;NAME&gt; &lt;OPTIONS&gt;
        ///
        ///引数:
        ///&lt;NAME&gt;      登録するプロファイル名。省略できます。
        ///&lt;OPTIONS&gt;	登録するオプション。
        ///
        ///オプション:
        ///--help                     コマンド ラインのヘルプを表示します。
        ///--lang=&lt;LANGAGE&gt;           実行時の言語を指定します。使用可能な値 ja、en。
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string profile_add_desctription {
            get {
                return ResourceManager.GetString("profile_add_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用法: hspcui profile delete &lt;NAME&gt;
        ///
        ///引数:
        ///&lt;NAME&gt;      削除するプロファイルのIDまたはプロファイル名。
        ///
        ///オプション:
        ///--help                     コマンド ラインのヘルプを表示します。
        ///--lang=&lt;LANGAGE&gt;           実行時の言語を指定します。使用可能な値 ja、en。
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string profile_delete_desctription {
            get {
                return ResourceManager.GetString("profile_delete_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プロファイル機能
        ///よく使うオプションをこの機能を使うことで省略することができます。
        ///プロファイルは、ユーザーファルダにある hspcuiconfig.json に登録できます。
        ///
        ///オプション一覧
        ///--profile=     指定されたプロファイルID又はプロファイル名のプロファイルを使用します。
        ///--profilea=    指定されたプロファイルID又はプロファイル名でプロファイルを追加します。
        ///               既に存在する場合は上書きします。
        ///--profiled=    指定されたプロファイルID又はプロファイル名のプロファイルを削除します。
        ///
        ///コマンド一覧
        ///profile add    指定されたプロファイルID又はプロファイル名でプロファイルを追加します。
        ///               既に存在する場合は上書きします。
        ///profile delete 指定されたプロファイルID又はプロファイル名のプロファイルを削除します。
        ///profile view   指定されたプロファイルID又はプロファイル名のプロファイルを表示します。
        ///
        ///hspcuiconfig. [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string profile_desctription {
            get {
                return ResourceManager.GetString("profile_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {
        ///  &quot;$schema&quot;: &quot;https://raw.githubusercontent.com/Asugakoisi/HSPComanndLine/main/src/json/hspcuiconfig-schema.json&quot;,
        ///  &quot;ver&quot;: &quot;1.0.0.0-0.1.0.0&quot;,
        ///  &quot;profiles&quot;: [
        ///    {
        ///      &quot;id&quot;: 0,
        ///      &quot;name&quot;: &quot;Build&quot;,
        ///      &quot;options&quot;: [
        ///        &quot;-P&quot;,
        ///        &quot;-m&quot;,
        ///        &quot;-C&quot;,
        ///        &quot;-D&quot;
        ///      ]
        ///    }
        ///  ]
        ///}
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string profile_example {
            get {
                return ResourceManager.GetString("profile_example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   --lang= オプションの競合
        ///--profile= オプションの処理の都合でプロファイルで指定した --lang= オプションが無視されます。
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string profile_note {
            get {
                return ResourceManager.GetString("profile_note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用法: hspcui profile view &lt;NAME&gt;
        ///
        ///引数:
        ///&lt;NAME&gt;      表示するプロファイルのIDまたはプロファイル名。
        ///
        ///オプション:
        ///--help                     コマンド ラインのヘルプを表示します。
        ///--lang=&lt;LANGAGE&gt;           実行時の言語を指定します。使用可能な値 ja、en。
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string profile_view_desctription {
            get {
                return ResourceManager.GetString("profile_view_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   runtime フォルダは {0} に設定されました。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string RtmDirectorySetTo {
            get {
                return ResourceManager.GetString("RtmDirectorySetTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用法: hspcui build &lt;SOURCE_FILE&gt; [options] [-- &lt;additional arguments&gt;...]
        ///
        ///引数:
        ///&lt;SOURCE_FILE&gt;                  実行するaxファイルのパス。
        ///
        ///オプション:
        ///-r0                            指定されたファイルのランタイムを表示します。
        ///-E                             hspcui 内で発生したエラーを無視して実行を続けます。
        ///-h, --help                     コマンド ラインのヘルプを表示します。
        ///--nologo                       著作権情報を表示しません。
        ///--syspath &lt;SYSTEM_DIR&gt;         HSPシステムフォルダを指定します。
        ///--rtmpath &lt;RUNTIME_DIR&gt;        runtime フォルダを指定します。
        ///--lang=&lt;LANGAGE&gt;               実行時の言語を指定します。使用可能な値 ja、en [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string run_desctription {
            get {
                return ResourceManager.GetString("run_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   - 普通に実行する。
        ///    hspcui run source.ax
        ///- オプション付きで実行する
        ///    hspcui run source.ax -- &quot;option&quot;
        ///- ランタイムを表示する
        ///    hspcui run source.ax -r0 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string run_example {
            get {
                return ResourceManager.GetString("run_example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   指定したプロファイルを設定しました。({0}) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SpecifiedProfileSet {
            get {
                return ResourceManager.GetString("SpecifiedProfileSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   HSPシステムフォルダは {0} に設定されました。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SysDirectorySetTo {
            get {
                return ResourceManager.GetString("SysDirectorySetTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用法: hspcui template add &lt;TEMPLATENAME&gt; [options]
        ///
        ///引数:
        ///&lt;TEMPLATENAME&gt;	コピーされるテンプレートディレクトリ名
        ///
        ///オプション:
        ///-E                             hspcui 内で発生したエラーを無視して実行を続けます。
        ///-h, --help                     コマンド ラインのヘルプを表示します。
        ///-o, --tempo &lt;NAME&gt;             コピー先でのディレクトリ名を指定します。
        ///-s, --syspath &lt;SYSTEM_DIR&gt;     HSPシステムフォルダを指定します。
        ///-t, --tmppath &lt;TEMPLATES_DIR&gt;  templates フォルダを指定します。
        ///--nologo                       著作権情報を表示しません。
        ///--lang=&lt;LANGAGE&gt;               実行時の言語を指定します。使用可能な値 ja、en。
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string template_add_desctription {
            get {
                return ResourceManager.GetString("template_add_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   - test テンプレートを templates ディレクトリにコピーします。
        ///    hspcui template add test
        ///- test テンプレートを指定した templates ディレクトリにコピーします。
        ///    hspcui template add test --tmppath C:\templates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string template_add_example {
            get {
                return ResourceManager.GetString("template_add_example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用法: hspcui template copy &lt;TEMPLATENAME&gt; [options]
        ///
        ///引数:
        ///&lt;TEMPLATENAME&gt;	コピーするテンプレートディレクトリ名
        ///
        ///オプション:
        ///-E                             hspcui 内で発生したエラーを無視して実行を続けます。
        ///-h, --help                     コマンド ラインのヘルプを表示します。
        ///-o, --tempo &lt;NAME&gt;             コピー先でのディレクトリ名を指定します。
        ///-s, --syspath &lt;SYSTEM_DIR&gt;     HSPシステムフォルダを指定します。
        ///-t, --tmppath &lt;TEMPLATES_DIR&gt;  templates フォルダを指定します。
        ///--nologo                       著作権情報を表示しません。
        ///--lang=&lt;LANGAGE&gt;               実行時の言語を指定します。使用可能な値 ja、en。
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string template_copy_desctription {
            get {
                return ResourceManager.GetString("template_copy_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   - defaultテンプレートをコピーします。
        ///    hspcui template copy
        ///- test テンプレートをコピーします。
        ///    hspcui template copy test
        ///- 指定した templates ディレクトリから test テンプレートをコピーします。
        ///    hspcui template copy test --tmppath C:\templates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string template_copy_example {
            get {
                return ResourceManager.GetString("template_copy_example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用法: hspcui template delete &lt;TEMPLATENAME&gt; [options]
        ///
        ///引数:
        ///&lt;TEMPLATENAME&gt;	削除するテンプレートディレクトリ名
        ///
        ///オプション:
        ///-E                             hspcui 内で発生したエラーを無視して実行を続けます。
        ///-h, --help                     コマンド ラインのヘルプを表示します。
        ///-s, --syspath &lt;SYSTEM_DIR&gt;     HSPシステムフォルダを指定します。
        ///-t, --tmppath &lt;TEMPLATES_DIR&gt;  templates フォルダを指定します。
        ///--nologo                       著作権情報を表示しません。
        ///--lang=&lt;LANGAGE&gt;               実行時の言語を指定します。使用可能な値 ja、en。
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string template_delete_desctription {
            get {
                return ResourceManager.GetString("template_delete_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   - defaultテンプレートを削除します。
        ///    hspcui template delete
        ///- test テンプレートを削除します。
        ///    hspcui template copy test
        ///- 指定した templates ディレクトリから test テンプレートを削除します。
        ///    hspcui template copy test --tmppath C:\templates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string template_delete_example {
            get {
                return ResourceManager.GetString("template_delete_example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   テンプレート機能
        ///これは開発でよく使うディレクトリ＆ファイルを簡単に複製できるようになるユーリティ機能です。
        ///hspc.exeがあるディレクトリ上に templates ディレクトリ が存在すれば、その中のディレクトリ達をテンプレート元として認識します。
        ///
        ///オプション一覧
        ///--temp          templates\\default ディレクトリをカレントディレクトリにコピーします。
        ///--temp=         指定されたテンプレートディレクトリをカレントディレクトリにコピーします。
        ///--tempd         templates\\default ディレクトリを削除します。
        ///--tempd=        指定されたテンプレートディレクトリを削除します。
        ///--tempa=        指定されたディレクトリを templates ディレクトリにコピーします。
        ///--tempo=        コピー先でのディレクトリ名を指定します。
        ///--tmppath=      templates ディレクトリを指定します。
        ///
        ///コマンド一覧
        ///template add    指定 [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string template_desctription {
            get {
                return ResourceManager.GetString("template_desctription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   --tempo= オプションについて
        ///このオプションは --temp --temp= --tempa= オプションの時に適応されます。
        ///--temp --temp= オプションでは、カレントディレクトリにコピーする際のディレクトリ名が変更され、 --tempa= オプションでは、テンプレートディレクトリにコピーする際のディレクトリ名が変更されます。
        ///つまり、&quot;--temp=test --tempo=test_copy&quot;とすれば、&quot;template\test&quot; の内容が &quot;カレントディレクトリ\test_copy&quot; にコピーされ、&quot;--tempa=test --tempo=test_copy&quot;とすれば、&quot;カレントディレクトリ\test&quot; の内容が &quot;template\test_copy&quot; にコピーされます。
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string template_note {
            get {
                return ResourceManager.GetString("template_note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   templates フォルダは {0} に設定されました。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TmpDirectorySetTo {
            get {
                return ResourceManager.GetString("TmpDirectorySetTo", resourceCulture);
            }
        }
    }
}
